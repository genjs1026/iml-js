{
  "name": "iml",
  "description": "Indentation Markup Language",
  "version": "0.2.2",
  "author": {
    "name": "Ludovic Chaboud"
  },
  "private": false,
  "homepage": "https://github.com/lchaboud/iml-js",
  "repository": {
    "type": "git",
    "url": "https://github.com/lchaboud/iml-js.git"
  },
  "bugs": {
    "url": "http://github.com/lchaboud/iml-js/issues"
  },
  "licenses": [
    {
      "type": "APACHE LICENCE V2",
      "url": "https://github.com/lchaboud/iml-js/blob/master/LICENSE"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "main": "lib/iml.js",
  "scripts": {
    "start": "node main.js",
    "test": "node node_modules/jasmine-node/lib/jasmine-node/cli.js spec"
  },
  "devDependencies": {
    "jasmine-node": "*"
  },
  "dependencies": {},
  "readme": "iml-js : IML Javascript Parser\r\n===\r\nChangelog\r\n---\r\n07/05/14\r\n* Add ```js2iml``` to convert javascript to iml\r\n* Add Unit tests for ```js2iml```\r\n\r\n07/02/14\r\n* Unit tests : tap ```npm test``` to launch tests\r\n* Tabulation : 1 tabulation equals to 4 spaces character\r\n\r\nWhat is IML ?\r\n===\r\n\r\nIML means \" Indentation Markup Language \" because the indentation delimits elements informations area.\r\n\r\nThe main objective  is to have the most simplified syntax than others in order to describe data easily.\r\nAn IML file must be comprehensive and editable by any human.\r\n\r\nThis syntax permits to describe the same data structure than JSON or YAML, but in a simplified way.\r\n\r\nAnd why not YAML ?\r\n---\r\nThe IML syntax is similar to YAML syntax, but IML is more easy to edit with less pitfalls :\r\n - we have not to add ```:``` at the end of each map keys\r\n - we have not to add a tiret ```-``` before each element of a list : only one line with a tiret ```-``` at the beginning of the list indicates that all children elements are in this list\r\n - multilines are easy to define with ```>``` symbol before the first line with no break line after it\r\n\r\n```\r\nMy recipes\r\n  -\r\n    Best Chocolate Chip Cookies\r\n      Ingredients\r\n        -\r\n          1 cup butter\r\n          1 cup white sugar\r\n          1 cup packed bown brown sugar\r\n          2 eggs\r\n          2 teaspoons vanilla extract\r\n          1 teaspoon baking soda\r\n          2 teaspoons hot water\r\n          1/2 teaspoon salt\r\n          2 cups semisweet chocolate\r\n          1 cup chopped walnuts\r\n      Preparation\r\n        -\r\n          > Preheat oven to 350 degrees F (175 degrees C)\r\n          > Cream together the butter, white sugar, and brown sugar until smooth. \r\n            Beat in the eggs one at a time, then stir in the vanilla. Dissolve \r\n            baking soda in hot water. Add to batter along with salt. Stir in flour, \r\n            chocolate chips, and nuts. Drop by large spoonfuls onto ungreased pans.\r\n          > Bake for about 10 minutes in the preheated oven, or until edges are \r\n            nicely browned.\r\n```\r\n\r\nIML syntax is described in the README file of the IML project : \r\nhttps://github.com/lchaboud/iml/blob/master/SYNTAX.md\r\n\r\nYou can see a comparison between IML and YAML and JSON here :\r\nhttps://github.com/lchaboud/iml/blob/master/SAMPLE.md\r\n\r\nHow To\r\n===\r\n\r\nConvert Javascript data to IML\r\n---\r\n```js\r\nvar iml = require('iml');\r\nvar data = ... // Javascript data\r\nvar imlContent = iml.js2iml(data);\r\n```\r\n\r\nConvert IML to Javascript data\r\n---\r\n```js\r\nvar iml = require('iml');\r\nvar data = iml.iml2js(\"iml content ...\");\r\n```\r\n\r\nRead IML file to Javascript data\r\n---\r\n```js\r\nvar iml = require('iml');\r\nvar fs = require('fs');\r\nvar path = require('path');\r\n\r\nvar filename = \"data.iml\";\r\nvar fileContent = fs.readFileSync(path.join(process.cwd(), filename), 'utf8');\r\n\r\nvar data = iml.iml2js(fileContent);\r\n\r\nconsole.log(data);\r\n```\r\n\r\nWrite Javascript data in IML file\r\n---\r\n```js\r\nvar iml = require('iml');\r\nvar fs = require('fs');\r\nvar path = require('path');\r\n\r\nvar data = ... ; // Javascript data\r\nvar imlContent = iml.js2iml(data);\r\n\r\nvar filename = \"data2.iml\";\r\nfs.writeFileSync(path.join(process.cwd(), filename), imlContent, 'utf8');\r\n```\r\n\r\nSample project\r\n---\r\nYou can get a sample project here :\r\nhttps://github.com/lchaboud/iml-js/tree/master/sample",
  "readmeFilename": "README.md",
  "_id": "iml@0.2.2",
  "_from": "iml@*"
}
